1. Criar um projeto usando Ionic CLI.

a) Abra o aplicativo VSCode.

b) Selecione a pasta ADS023 e abra o terminal pressionando CTRL+'.

c) Crie um novo projeto Ionic chamado Atividade08 usando o template em branco.

d) Execute o projeto criado.

e) Abra outro terminal no VSCode.



2. Criar uma notificação sutil usando Ionic

a) Adicione no conteúdo da página um ion-item.

b) Dentro do ion-item adicione um ion-label e um ion-toogle para ligar e desligar o Bluetooth. 

c) Trate o evento click do ion-toogle para chamar a função ligaBluetooth() passando $event.target.value como parâmetro.

d) Injete no construtor da classe HomePage um atributo privado toastCtrl do tipo ToastController.

e) Declare um atributo statusBluetooth do tipo boolean.

f) Dentro da classe HomePage declare um método ligaBluetooth() que recebe um parâmetro status do tipo boolean. Faça o método atualizar o atributo statusBluetoothe com o parâmetro status.

g) Declare um método assíncrono exibirToast().

h) Dentro do método exibirToast() declare uma constante msg que pode receber o valor "Bluetooth ligado" ou "Bluetooth desligado" dependendo do valor do atributo statusBluetooth.

i) Ainda no método exibirToast() declare uma constante toast que deve receber um objeto Toast gerado pelo método create() de toast.Ctrl. Ela deve exibir a mensagem da constante msg e duração 2000.

const toast = await toastCtrl.create({
  message: msg,
  duration: 2000
});

j) Ainda no método exibirToast() exiba o toast chamando o método present().

K

3. Criar um alerta usando Ionic

a) Injete no construtor da classe HomePage um atributo privado alertCtrl do tipo AlertController.

b) Dentro da classe HomePage declare um método assíncrono permitirBluetooh().

c) No método permitirBluetooh() declare uma constante alert que deve receber um objeto Alert gerado pelo método create alertCtrl. Ela deve questionar se o usuário quer ligar o Bluetooth do aparelho.

const alert = await alertCtrl.create({
});

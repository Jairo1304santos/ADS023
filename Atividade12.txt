1. Criar uma intenção explícita.

a) Abra o aplicativo Android Studio.

b) Escolha a opção "Start New Android Studio Project". Selecione a aba "Phone and Tablet" e o template "Add No Activity".

c) Prossiga atribuindo o nome Atividade12 ao projeto e o br.iesb.ads023.atividade12 ao pacote.

d) Verifique se a localização do projeto está indicando a pasta ADS023. Senão estiver, atualize para o caminho correto (C:\Users\matricula\Desktop\ADS023\Projetos\Atividade12). 

e) Deixe a linguagem Kotlin como padrão do projeto e finalize o assistente.

f) Ative o versionamento acionando o menu VCS->Enable Version Control Integration. Selecione o Git no sistema de controle de versão.

g) Adicione uma Empty Activity. Salve com o nome MainActivity. No método onCreate() altere o título da activity para "Main".

h) Adicione outra Empty Activity. Salve com o nome ChildActivity. No método onCreate() altere o título da activity para "Child".

i) Aba o arquivo de layout activity_main no modo de Design.

j) Adicione um botao ao layout. Atribua o texto "Enviar" ao botão.

k) Dentro no método onCreate() da MainActiviy defina um ouvinte View.OnClickListener ao botão. Faça ele exibir ChildActivity.

final Button botao = (Button) findViewById(R.id.button);
botao.setOnClickListener(new View.OnClickListener() {
  public void onClick(View v) {
     Intent intencao = new Intent(MainActivity.this, ChildActivity.class);
     startActivity(intencao);    
  }
});

l) Execute o projeto e pressione o botão. Qual foi o resultado? Pare a execução.

m) Adicione um EditText ao layout activity_main acima do botão.

n) Acrescentar na intencao o parametro extra "msg" com o valor do EditText.

final EditText texto = (EditText) findViewById(R.id.editText);
...
  public void onClick(View v) {
     Intent intencao = new Intent(MainActivity.this, ChildActivity.class);
     intencao.putExtra("msg", texto.getText().toString());
     ...
  }

o) Acresente um TextView no layout activity_child.

p) No método onCreate() da ChildActivity receba o parâmetro "msg" da intenção atribuindo ao TextView.

protected void onCreate(@Nullable Bundle savedInstanceState) {
   ...
   Intent intencao = getIntent();
   final TextView texto = (TextView) findViewById(R.id.textView);
   texto.setText(intencao.getStringExtra("msg"));
   ...
}

q) Execute novamente o projeto. Preencha o campo texto e pressione o botão. Qual foi o resultado? Pare a execução.



2. Criar uma intenção pendente. 

a) Adicione um botao ao layout activiy_main. Atribua o texto "Notificar" ao botão.

b) Dentro no método onCreate() da MainActiviy defina um ouvinte View.OnClickListener ao botão. Faça ele criar uma intenção pendente para a ChildActivity.

final Button botao2 = (Button) findViewById(R.id.button2);
botao2.setOnClickListener(new View.OnClickListener() {
  public void onClick(View v) {
     Intent intencao = new Intent(MainActivity.this, ChildActivity.class);
     intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
     PendingIntent pendente = PendingIntent.getActivity(MainActivity.this, 0, intencao, 0);
  }
});

c) Ainda no método onClick() crie uma notificação que deve conter a intenção pendente.

String CHANNEL_ID = "meu_canal_id";
if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
   CharSequence name = "meu_canal";
   String description = "teste de notificacao";
   int importance = NotificationManager.IMPORTANCE_DEFAULT;
   NotificationChannel channel = new NotificationChannel(CHANNEL_ID, name, importance);
   channel.setDescription(description);
   NotificationManager notificationManager = getSystemService(NotificationManager.class);
   notificationManager.createNotificationChannel(channel);
}

NotificationCompat.Builder builder = new NotificationCompat.Builder(MinhaActivity.this, CHANNEL_ID);
builder.setSmallIcon(android.R.drawable.ic_dialog_info)
       .setContentTitle("Minha notificacao")
       .setPriority(NotificationCompat.PRIORITY_DEFAULT)
       .setContentIntent(pendente)
       .setContentText("Chegou uma notificacao importante!");

NotificationManagerCompat manager = NotificationManagerCompat.from(MinhaActivity.this);
manager.notify(123, builder.build());

d) Execute novamente o projeto. Clique no botão Notificar. Qual foi o resultado? 

e) Abra a notificação. Qual foi o resultado? Pare a execução.

f) Adicione os arquivos no git local através do menu VCS->Git->Add.

g) Faça o commit através do menu VCS->Commit. Marque todos os itens e acrescente ao comentário "Criando projeto Atividade12". Acione a opção Commit.

h) Envie os arquivos versionados para o git remoto acionando o menu VCS->Git->Push.

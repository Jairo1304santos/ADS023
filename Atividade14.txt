1. Trabalhar com LinearLayout no Android.

a) Abra o aplicativo Android Studio.

b) Escolha a opção "Start New Android Studio Project". Selecione a aba "Phone and Tablet" e o template "Add No Activity".

c) Prossiga atribuindo o nome Atividade14 ao projeto e o br.iesb.ads023.atividade14 ao pacote.

d) Verifique se a localização do projeto está indicando a pasta ADS023. Senão estiver, atualize para o caminho correto (C:\Users\matricula\Desktop\ADS023\Projetos\Atividade14). 

e) Deixe a linguagem Kotlin como padrão do projeto e finalize o assistente.

f) Ative o versionamento acionando o menu VCS->Enable Version Control Integration. Selecione o Git no sistema de controle de versão.

g) Adicione uma Empty Activity. Torne-a uma Launcher Activity e salve com o nome LinearActivity. 

h) Altere o arquivo activity_linear, utilizando o modo Text, para usar um LinearLayout com orientação vertical ocupando todo o tamanho da tela (height e width match_parent).

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_height="match_parent"
    android:layout_width="match_parent"
    android:orientation="vertical">
</LinearLayout>

i) Adicione um componente TextView ao layout ocupando a largura da tela.

<TextView
    android:id="@+id/textView"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:textSize="40dp"/>

j) Adicione quatro LinearLayout ao layout principal, todos com orientação horizontal e ocupando a largura da tela.

<LinearLayout
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="horizontal">
</LinearLayout>

k) Adicione três componentes Button em cada layout de modo a criar um teclado discador do telefone.

<Button
   android:id="@+id/button?"
   android:layout_width="80dp"
   android:layout_height="70dp"
   android:text="?"
   android:textSize="40dp"/>

l) Adicione mais um LinearLayout ao layout principal ocupando a largura da tela.

<LinearLayout
    android:layout_width="match_parent"
    android:layout_height="wrap_content">
</LinearLayout>

m) Adicione dois componentes Button ao layout adicionado para representar as ações DISCAR e APAGAR.

<Button
    android:id="@+id/buttonD"
    android:layout_width="wrap_content"
    android:layout_height="70dp"
    android:text="Discar"
    android:textSize="40dp"/>
    
n) Adicione em cada layout dos botões a propriedade android:gravity="center_horizontal".

o) Execute o projeto através da opção 'Run app' e observe o resultado.

p) Pare a execução do projeto através da opção 'Stop app'.



2. Trabalhar com ConstraitLayout no Android.

a) Adicione uma Empty Activity. Torne-a uma Launcher Activity e salve com o nome ConstraintActivity. 

p) Adicione os arquivos no git local através do menu VCS->Git->Add.

q) Faça o commit através do menu VCS->Commit. Marque todos os itens e acrescente ao comentário "Criando projeto Atividade14". Acione a opção Commit.

r) Envie os arquivos versionados para o git remoto acionando o menu VCS->Git->Push.

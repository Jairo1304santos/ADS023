1. Criar um projeto React Native.

a) Abra o aplicativo VSCode.

b) Selecione a pasta ADS023 e abra o terminal pressionando CTRL+'.

c) Crie um novo projeto React Native chamado Atividade06 usando o template em branco.

d) Pelo terminal do VSCode, acesse a pasta atividade06 e instale o componente React Navigation.

npm install @react-navigation/native @react-navigation/stack
expo install react-native-reanimated react-native-gesture-handler react-native-screens react-native-safe-area-context @react-native-community/masked-view

e) Importe o pacote react-native-gesture-handler no arquivo App.js.

import 'react-native-gesture-handler';

f) Execute o projeto no modo web (Dica: expo start --web).



2. Criar um componente de navegação do React Navigation.

a) Importe o componente NavigationContainer do pacote @react-navigation/native.

import { NavigationContainer } from '@react-navigation/native';

b) Altere a função App para retornar somente um componente NavigationContainer.

return (
  <NavigationContainer>
  </NavigationContainer>
);

c) Importe o componente createStackNavigator do pacote @react-navigation/stack.

import { createStackNavigator } from '@react-navigation/stack';

d) Declare uma constante Stack inicializando com o retorno da função createStackNavigator();

const Stack = createStackNavigator();

e) Adicione o componente Stack.Navigator no componente NavigatorContainer.

<Stack.Navigator>
</Stack.Navigator>



3. Criar uma listagem de contatos no React Native.

a) Crie uma tela chamada Lista.js.

b) Dentro do arquivo Lista.js implemente a estrutura básica de um componente screen do React Native.

c) Adicione os pâmetros route e navigation à função Lista.

export default function Lista({route, navigation}) {
}

d) Faça a função Lista retornar somente um componente View contendo um Button e um FlatList.

return (
  <View style={styles.container}>
  <Button title="Novo contato"/>
  <FlatList style={styles.container}/>    
);

e) Crie uma constante styles contendo um estilo container para ser aplicado ao FlatList.

const sytles = StyleSheet.create({
container: {
  flex: 1,
  backgroundColor: '#fff'
}
});

f) Declare um estado contatos inicializando com um array vazio.

const [contatos, setContatos] = useState([]);

g) Adione na função Lista uma constante exibirItem que deve receber uma arrow function contendo o parâmetro { item } e retornar com componente View contendo dois componentes Text, um para exibir o item.nome o outro para exibir o item.telefone.

const exibirItem = ({ item }) => {
    return (
       <View style={styles.item}>
          <Text style={styles.nome}>{item.nome}</Text>
          <Text style={styles.telefone}>{item.telefone}</Text>
       </View>
    );   
}

h) Adicione os estilos item, nome e telefonte contendo as seguintes propriedades.

item: {
   flexDirection: 'row',
   alignItems: 'center',
   justifyContent: 'space-between',
   padding: 16,
   boderBottomWidth: 1,
   borderColor: '#c1c4cd',
},
nome: {
   flex: 1,
   fontFamily: 'Arial',
   fontSize: 18,
   fontWeight: '500',
},
titulo: {
   fontFamily: 'Arial',
   fontSize: 14,
   fontWeight: '500',
},   

i) Adicione no componente FlatList a propriedade data atribuindo o objeto contatos e a propriedade renderItem atribuido a funcao exibirItem

  <FlatList style={styles.container} data={contatos} renderItem={exibirItem}/>

j) Adicione na função Lista uma constante novoContato que deve navegar para a rota Novo.

const novoContato = () => {
   navigation.navigate('Novo');
}

k) Adicione no componente Button a propriedade onPress atribuindo a função novoContato.

<Button title="Novo contato" onPress={novoContato}/>

l) Adicione o componente Stack.Screen no componente Stack.Navigator para criar uma rota para a tela Lista.

<Stack.Screen name='Lista' component={Lista}/>

m) Importe o componente Lista a partir do pacote Lista.

import Lista from './Lista';



4. Criar um cadastro de contados no React Native.

a) Instale os componentes Formik e yup.

b) 

a) Crie uma tela chamada Novo.js.

b) Dentro do arquivo Novo.js implemente a estrutura básica de um componente screen do React Native.

g) Adicione outro componente Stack.Screen para criar uma rota para a tela Novo.

<Stack.Screen name='Lista' component={Novo}/>

i) Importe o componente Novo a partir do pacote Novo.

import Novo from './Novo';

) Pressione as teclas Ctrl+Shift+G para acessar o painel do Git. Em seguida, clique em Stage All.

) Efetive o commit acionando a opção Commit All. Não esqueça de por um comentário ao commit (Ex.: Criando o projeto Atividade06).

) Envie os arquivos versionados para o git remoto acionando a opção Push. Informe usuário/senha e acione a opção Sign in.

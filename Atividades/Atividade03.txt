1. Criar um projeto usando Expo CLI.

a) Abra o aplicativo VSCode.

b) Instale os plugins React Native Tools e ES7 React/Redux/GraphQL/React-Native Snippets.

c) Selecione a pasta ADS023 e abra o terminal pressionando CTRL+'.

d) Crie um novo projeto React Native chamado Atividade03 usando o template em branco (Dica: expo init Atividade03).



2. Executando um projeto usando Expo CLI.

a) Acesse o diretório do projeto criado (Dica: digite cd nome-do-projeto no terminal).

b) Execute o Metro Blunder com o comando expo start. Foi exibida a página no navegador? 

c) Pelo Metro Blunder, rode o projeto Atividade03 pelo web browser. 

c) Interrompa a execução do servidor pressionando CTRL+C.

d) Execute novamente o Metro Blunder com a opção -web. Notou alguma diferença? 

e) Interrompa a execução do servidor pressionando CTRL+C.



3. Trabalhar os elementos screen, props, state e style do projeto React Native.

a) No arquivo App.js apague o retorno da função App deixando vazio.

b) Apague o conteúdo do método Stylesheet.create().

c) Execute o projeto no navegador pelo Metro Blunder. Qual foi o resultado?

d) Faça a função App retornar <View></View>. Recarregue a página do app no navegador e observe o resultado.

e) Atribua o estilo { backgroundColor: 'red' } a tag View (Dica: <View style={{ backgroundColor: 'red'}}>).

f) Altere o estilo backgroundColor para backgroud-color. Recarregue a página do app no navegador e observe o resultado.

g) Apa

f) Interrompa a execução do servidor pressionando CTRL+C.



4. Executando um projeto na plataforma Android.

a) Abra o Android Studio no menu Configure->AVDManager para configurar um dispostivo virtual.

b) Carregue um dispositivo virtual através da opção Play.

c) No terminal do VSCode execute o Metro Blunder.

d) No Metro Blunder escolha a opção Run a device Android emulator. Qual foi o resultado?

e) No dispositivo virtual pressione as teclas CTRL+M.

f) Escolha a opção Debugging JS para ativar o modo debug. Qual foi o resultado?

g) Acrescente na função App() do componente App.js a chamada console.log("Chamou a função App()!");.

h) Recarregue o aplicativo no dispositivo virtual pressionando as teclas CTRL+R. Apareceu alguma mensagem na janela de debugging?

i) No dispositivo virtual pressione as teclas CTRL+M e pare o modo debug.

j) Interrompa a execução do servidor pressionando CTRL+C.

k) Efetive o commit acionando a opção Commit All. Não esqueça de por um comentário ao commit (Ex.: Criando o projeto Atividade03).

l) Envie os arquivos versionados para o git remoto acionando a opção Push. Informe usuário/senha e acione a opção Sign in.
